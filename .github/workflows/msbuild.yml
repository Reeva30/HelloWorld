name: Build and Test

on: [push, pull_request]

env:
  QT_DIR: C:\Qt\5.15.2\mingw81_64

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: m

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install Qt
      run: choco install qt5-default --params "/InstallDir:C:\Qt"

    - name: Set Qt environment variables
      shell: powershell
      run: |
        echo "C:\Qt\5.15.2\mingw81_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Qt\5.15.2\mingw81_64\lib" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Qt\5.15.2\mingw81_64\include" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        [Environment]::SetEnvironmentVariable('QTDIR', 'C:\Qt\5.15.2\mingw81_64', 'Machine')
        [Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\Qt\5.15.2\mingw81_64\bin', 'Machine')

    - name: Refresh environment variables
      shell: powershell
      run: |
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        refreshenv

    - name: Verify Qt installation and paths
      run: |
        echo %QTDIR%
        echo %PATH%
        dir C:\Qt\5.15.2\mingw81_64

    - name: Install CMake
      run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Set up MSVC environment
      shell: cmd
      run: call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"

    - name: Configure CMake
      run: cmake -B build -S . -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH=%QTDIR%

    - name: Build with CMake
      run: cmake --build build --config Debug
