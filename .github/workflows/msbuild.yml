name: Build and Test

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: '${{ github.workspace }}/QT/'
        install-deps: 'true'
        modules: 'qtcharts qtwebengine'
        archives: 'qtbase qtsvg'
        cache: 'false'
        cache-key-prefix: 'install-qt-action'
        setup-python: 'true'
        tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
        set-env: 'true'
        tools-only: 'false'
        aqtversion: '==3.1.*'

    - name: List QT directory contents
      run: dir "${{ github.workspace }}\QT"

    - name: List Tools directory contents
      run: dir "${{ github.workspace }}\QT\Tools"

    - name: List QtCreator directory contents
      run: dir "${{ github.workspace }}\QT\Tools\QtCreator\bin"

    - name: Set up Qt environment
      run: cmd /c "${{ github.workspace }}\QT\Tools\QtCreator\bin\qtenv2.bat"

    - name: Install CMake
      run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Configure CMake
      run: cmake -B build -S . -G "Visual Studio 16 2019" -A x64 -DCMAKE_PREFIX_PATH="${{ github.workspace }}\QT\5.15.2\msvc2019_64"

    - name: Build with CMake
      run: cmake --build build --config Debug
