name: Add Qt VS Add-in to Visual Studio 2022 and Configure Qt Version

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-qt:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Verify Visual Studio 2022 installation
      run: |
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        if (-Not (Test-Path $vswherePath)) {
          Write-Error "vswhere.exe not found. Visual Studio 2022 might not be installed."
          exit 1
        }
        $vsInstallPath = & $vswherePath -latest -version "[17.0,18.0)" -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
        Write-Output "VS_INSTALL_PATH=$vsInstallPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

    - name: Download Qt VS Add-in
      run: |
        $url = "https://mirror.netcologne.de/qtproject/development_releases/vsaddin/3.0.2/qt-vsaddin-msvc2022-3.0.2.vsix"
        $output = "qt-vsaddin-msvc2022-3.0.2.vsix"
        Invoke-WebRequest -Uri $url -OutFile $output

    - name: Verify SHA-256 Hash
      run: |
        $expectedHash = "b1eba080495505638e2431e85ffa4108ee3b688595cc4657f1b80e30712c2f23"
        $fileHash = Get-FileHash -Path "qt-vsaddin-msvc2022-3.0.2.vsix" -Algorithm SHA256
        if ($fileHash.Hash -ne $expectedHash) {
          throw "Hash mismatch: $($fileHash.Hash)"
        }

    - name: Find VSIXInstaller
      run: |
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        $vsInstallPath = & $vswherePath -latest -version "[17.0,18.0)" -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
        $vsixInstallerPath = Join-Path -Path $vsInstallPath -ChildPath "Common7\IDE\VSIXInstaller.exe"
        if (-Not (Test-Path $vsixInstallerPath)) {
          Write-Error "VSIXInstaller.exe not found."
          exit 1
        }
        Write-Output "VSIX_INSTALLER_PATH=$vsixInstallerPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

    - name: Install Qt VS Add-in
      run: |
        $vsixInstallerPath = $env:VSIX_INSTALLER_PATH
        Start-Process -FilePath $vsixInstallerPath -ArgumentList "/q", "qt-vsaddin-msvc2022-3.0.2.vsix" -NoNewWindow -Wait

    - name: Configure Qt Version
      run: |
        $qtVersionName = "6.6.1"
        $qtPath = "X:\OpenTwin\Repo\Third_Party_Libraries\Qt\6.6.1\msvc2019_64"
        
        # Path to the Qt settings file used by the add-in (example path)
        $qtSettingsPath = "$env:APPDATA\QtProject\qtcreator\qtversion.xml"
        
        # Check if the settings file exists
        if (Test-Path $qtSettingsPath) {
            [xml]$qtConfig = Get-Content $qtSettingsPath
            
            # Create a new qtversion element
            $newVersion = $qtConfig.CreateElement("qtversion")
            $newVersion.SetAttribute("Id", "qt." + $qtVersionName)
            $newVersion.SetAttribute("Name", $qtVersionName)
            $newVersion.SetAttribute("QMakePath", Join-Path $qtPath "bin\qmake.exe")
        
            # Append the new version to the qtversions node
            $qtConfig.qtcreator.qtversions.AppendChild($newVersion) | Out-Null
            $qtConfig.Save($qtSettingsPath)
        
            Write-Host "Configured Qt version $qtVersionName with path $qtPath"
        } else {
            Write-Error "Qt settings file not found at $qtSettingsPath"
        }
