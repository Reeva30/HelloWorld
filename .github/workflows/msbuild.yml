name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_FILE_PATH: HelloWorld.vcxproj
  BUILD_CONFIGURATION: Debug|x64 
  DEVENV_PATH: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.exe
  QT_PATH: ${{ github.workspace }}\ThirdParty\Qt\6.6.1\msvc2019_64
  QT_VERSION: 6.6.1
  
permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Visual Studio 2022
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Debug - List repository files
      run: dir /s
      shell: cmd

    # Step 4: Add Visual Studio to PATH
    - name: Add Visual Studio to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    # Step 5: Debug - List repository files
    - name: Debug - List repository files
      run: dir /s
      shell: cmd

    # Step 10: Download Qt Visual Studio Tools Extension
    - name: Download Qt Visual Studio Tools Extension
      run: |
        Invoke-WebRequest -Uri "https://mirror.netcologne.de/qtproject/development_releases/vsaddin/2.8.0/qt-vsaddin-msvc2022-2.8.0.vsix" -OutFile "qt-vsaddin.vsix"
      shell: powershell

    # Step 11: Find and Print Visual Studio Path
    - name: Find Visual Studio Path
      id: vs-path
      run: |
        $vsPath = &"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
        echo "VS_PATH=$vsPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell

    # Step 12: Find VSIX Installer Path
    - name: Find VSIX Installer Path
      id: vsix-path
      run: |
        $vsPath = "${{ env.VS_PATH }}"
        $vsInstallerPath = Get-ChildItem -Path $vsPath -Recurse -Filter vsixinstaller.exe | Select-Object -First 1 -ExpandProperty FullName
        if (-not $vsInstallerPath) {
          throw "vsixinstaller.exe not found"
        }
        echo "VSIX_PATH=$vsInstallerPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell

    # Step 13: Install VSIX Package
    - name: Install VSIX Package
      run: |
        $vsInstallerPath = "${{ env.VSIX_PATH }}"
        Write-Host "Installing the VSIX package with VSIX Installer Path: $vsInstallerPath"
        Start-Process -FilePath $vsInstallerPath -ArgumentList '-quiet', '-a', '-s', '-q', 'qt-vsaddin.vsix' -Wait -NoNewWindow -RedirectStandardOutput vsixinstaller.log -RedirectStandardError vsixinstaller.err
        if ($LASTEXITCODE -ne 0) {
          Write-Host "VSIX installation output:"
          Get-Content -Path vsixinstaller.log
          Write-Host "VSIX installation error:"
          Get-Content -Path vsixinstaller.err
          throw "VSIX installation failed with exit code $LASTEXITCODE"
        }
        Write-Host "VSIX package installed successfully."
      shell: powershell

    # Step 14: Set Qt Path in Visual Studio
    - name: Set Qt Path in Visual Studio
      run: |
        $vsPath = "${{ env.VS_PATH }}"
        &"$vsPath\Common7\IDE\devenv.com" /command "Tools.Options"
        &"$vsPath\Common7\IDE\devenv.com" /command "QtVersions.AddQtVersion"
        &"$vsPath\Common7\IDE\devenv.com" /command "qtAddExistingVersion ${{ env.QT_PATH }}"
      shell: powershell

    - name: Build
      shell: cmd
      run: |
        "%DEVENV_PATH%" "%PROJECT_FILE_PATH%" /Build "%BUILD_CONFIGURATION%" /Out buildLog_Debug.txt
